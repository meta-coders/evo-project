--
-- PostgreSQL database dump
--

-- Dumped from database version 11.1
-- Dumped by pg_dump version 11.1

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET client_min_messages = warning;
SET row_security = off;

SET default_tablespace = '';

SET default_with_oids = false;

--
-- Name: Client; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."Client" (
    "UserId" integer,
    "Avatar" text
);


ALTER TABLE public."Client" OWNER TO postgres;

--
-- Name: Event; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."Event" (
    "EventId" integer NOT NULL,
    "HostId" integer,
    "MusicianId" integer[],
    "Title" text,
    "Description" text,
    "Date" date,
    "StartTime" time without time zone
);


ALTER TABLE public."Event" OWNER TO postgres;

--
-- Name: Event_EventId_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public."Event_EventId_seq"
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public."Event_EventId_seq" OWNER TO postgres;

--
-- Name: Event_EventId_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public."Event_EventId_seq" OWNED BY public."Event"."EventId";


--
-- Name: Host; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."Host" (
    "UserId" integer,
    "Name" text,
    "Avatar" text,
    "Interior" text[],
    "City" text,
    "Address" text,
    "Description" text
);


ALTER TABLE public."Host" OWNER TO postgres;

--
-- Name: Musician; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."Musician" (
    "UserId" integer,
    "Name" text,
    "Avatar" text,
    "Description" text,
    "Tracks" json
);


ALTER TABLE public."Musician" OWNER TO postgres;

--
-- Name: Session; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."Session" (
    "SessionId" text NOT NULL,
    "UserId" integer
);


ALTER TABLE public."Session" OWNER TO postgres;

--
-- Name: User; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."User" (
    "UserId" integer NOT NULL,
    "Email" text,
    "Password" text,
    "Role" text
);


ALTER TABLE public."User" OWNER TO postgres;

--
-- Name: User_UserId_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public."User_UserId_seq"
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public."User_UserId_seq" OWNER TO postgres;

--
-- Name: User_UserId_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public."User_UserId_seq" OWNED BY public."User"."UserId";


--
-- Name: Event EventId; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."Event" ALTER COLUMN "EventId" SET DEFAULT nextval('public."Event_EventId_seq"'::regclass);


--
-- Name: User UserId; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."User" ALTER COLUMN "UserId" SET DEFAULT nextval('public."User_UserId_seq"'::regclass);


--
-- Data for Name: Client; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."Client" ("UserId", "Avatar") FROM stdin;
1	avatar_url
3	avatar_url
4	avatar_url
5	avatar_url
6	avatar_url
12	avatar_url
13	avatar_url
14	avatar_url
15	avatar_url
16	avatar_url
\.


--
-- Data for Name: Event; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."Event" ("EventId", "HostId", "MusicianId", "Title", "Description", "Date", "StartTime") FROM stdin;
\.


--
-- Data for Name: Host; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."Host" ("UserId", "Name", "Avatar", "Interior", "City", "Address", "Description") FROM stdin;
17	Host1	avatar_url	{image_url1,image_url2}	Kyiv	Khreschatyk	Description Host1
18	Host2	avatar_url	{image_url1,image_url2}	Kyiv	Poshtova Ploscha	Description Host2
19	Host3	avatar_url	{image_url1,image_url2}	Kyiv	KPI	Description Host3
20	Host4	avatar_url	{image_url1,image_url2}	Kyiv	NAU	Description Host4
\.


--
-- Data for Name: Musician; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."Musician" ("UserId", "Name", "Avatar", "Description", "Tracks") FROM stdin;
7	Musician1	avatar_url	Musician1 description	{ "trackName": "trackUrl" }
7	Musician1	avatar_url	Musician1 description	{ "trackName": "trackUrl" }
8	Musician2	avatar_url	Musician1 description	{ "trackName": "trackUrl" }
9	Musician3	avatar_url	Musician1 description	{ "trackName": "trackUrl" }
10	Musician4	avatar_url	Musician1 description	{ "trackName": "trackUrl" }
11	Musician5	avatar_url	Musician1 description	{ "trackName": "trackUrl" }
\.


--
-- Data for Name: Session; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."Session" ("SessionId", "UserId") FROM stdin;
\.


--
-- Data for Name: User; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."User" ("UserId", "Email", "Password", "Role") FROM stdin;
1	user1@mail.com	password	Client
3	user2@mail.com	password	Client
4	user3@mail.com	password	Client
5	user4@mail.com	password	Client
6	user5@mail.com	password	Client
7	user6@mail.com	password	Musician
8	user7@mail.com	password	Musician
9	user8@mail.com	password	Musician
10	user9@mail.com	password	Musician
11	user10@mail.com	password	Musician
12	user11@mail.com	password	Client
13	user12@mail.com	password	Client
14	user13@mail.com	password	Client
15	user14@mail.com	password	Client
16	user15@mail.com	password	Client
17	user16@mail.com	password	Host
18	user17@mail.com	password	Host
19	user18@mail.com	password	Host
20	user19@mail.com	password	Host
\.


--
-- Name: Event_EventId_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public."Event_EventId_seq"', 1, false);


--
-- Name: User_UserId_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public."User_UserId_seq"', 20, true);


--
-- Name: Event Event_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."Event"
    ADD CONSTRAINT "Event_pkey" PRIMARY KEY ("EventId");


--
-- Name: Session Session_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."Session"
    ADD CONSTRAINT "Session_pkey" PRIMARY KEY ("SessionId");


--
-- Name: User User_Email_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."User"
    ADD CONSTRAINT "User_Email_key" UNIQUE ("Email");


--
-- Name: User User_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."User"
    ADD CONSTRAINT "User_pkey" PRIMARY KEY ("UserId");


--
-- Name: Client Client_UserId_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."Client"
    ADD CONSTRAINT "Client_UserId_fkey" FOREIGN KEY ("UserId") REFERENCES public."User"("UserId");


--
-- Name: Event Event_HostId_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."Event"
    ADD CONSTRAINT "Event_HostId_fkey" FOREIGN KEY ("HostId") REFERENCES public."User"("UserId");


--
-- Name: Host Host_UserId_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."Host"
    ADD CONSTRAINT "Host_UserId_fkey" FOREIGN KEY ("UserId") REFERENCES public."User"("UserId");


--
-- Name: Musician Musician_UserId_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."Musician"
    ADD CONSTRAINT "Musician_UserId_fkey" FOREIGN KEY ("UserId") REFERENCES public."User"("UserId");


--
-- Name: Session Session_UserId_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."Session"
    ADD CONSTRAINT "Session_UserId_fkey" FOREIGN KEY ("UserId") REFERENCES public."User"("UserId");


--
-- PostgreSQL database dump complete
--

